<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /AdDCSVOuiJZkQAAAABJRU5ErkJggg==
</value>
  </data>
</root>